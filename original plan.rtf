{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;\f2\fnil\fcharset0 LucidaGrande;
\f3\fmodern\fcharset0 Courier;\f4\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid202\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid303\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid402\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid502\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid602\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid702\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid802\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid902\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid10}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}}
\paperw11900\paperh16840\margl1440\margr1440\vieww18700\viewh19680\viewkind0
\deftab720
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs48 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Piece Interface and Subclasses\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Role & Responsibilities
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The 
\f3 Piece
\f1  class serves as an abstract base class defining common interfaces and fields for all chess pieces.\
\ls1\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Subclasses (e.g., Pawn, Knight) implement specific movement rules and special behaviors.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Fields
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 color
\f1 : The color of the piece (e.g., "white", "black").\
\ls1\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 current_square
\f1 : A reference to the 
\f3 Square
\f1  object that the piece currently occupies.\
\ls1\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 image_path
\f1 : Path to the image representing the piece.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Methods
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 get_possible_moves(board)
\f1 : Returns a list of all possible legal moves for the piece, considering the current board state.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Special moves like castling, en passant, and promotions are evaluated and added after subtracting pinned moves.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 get_pinned_moves(board)
\f1 : Returns a list of moves that are not allowed due to a pin.\
\ls1\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 is_orthogonally_pinned(board) -> bool
\f1 : Checks if the piece is pinned orthogonally (i.e., by a Rook or Queen).\
\ls1\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 is_diagonally_pinned(board) -> bool
\f1 : Checks if the piece is pinned diagonally (i.e., by a Bishop or Queen).\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Subclasses
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Pawn
\f1 , 
\f3 Knight
\f1 , 
\f3 Bishop
\f1 , 
\f3 Rook
\f1 , 
\f3 Queen
\f1 , 
\f3 King
\f1 : Implement the 
\f3 get_possible_moves()
\f1  and 
\f3 get_pinned_moves()
\f1  methods according to specific movement rules.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Special Fields for Certain Pieces
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 has_moved
\f1 : For pieces like the King and Rook, tracks whether they have moved, crucial for castling.\
\ls1\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 en_passant_target
\f1 : For Pawns to track if a pawn is an en passant target.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b \cf0 \strokec2 Square Class\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Role & Responsibilities
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls2\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Represents a single square on the chessboard, managing its location and the piece occupying it.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Fields
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls2\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 location
\f1 : The square's position on the board (e.g., (x, y)).\
\ls2\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 piece
\f1 : The piece currently occupying the square, if any.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Methods
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls2\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 is_occupied()
\f1 : Returns whether the square is occupied by a piece.\
\ls2\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 remove_piece()
\f1 : Updates the piece\'92s 
\f3 current_square
\f1  reference to None and sets 
\f3 self.piece
\f1  to None.\
\ls2\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 set_piece(piece)
\f1 : Sets a piece on the square and updates the piece field and its 
\f3 current_square
\f1  reference.\
\ls2\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 __str__()
\f1 : Returns a visual representation of the square for debugging.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b \cf0 \outl0\strokewidth0 Board Class\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Role & Responsibilities
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Manages the chessboard's state, including the placement and movement of pieces, handling special moves, managing checks and checkmates, and tracking all pieces in the game.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Fields
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
squares
\f1 : A 2D array (8x8 grid) of 
\f3 Square
\f1  objects representing each position on the board.\
\ls3\ilvl1
\f3 \kerning1\expnd0\expndtw0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
last_move
\f1 : Stores the last move made, including the piece, its previous square, and the destination square.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}
\f3 \expnd0\expndtw0\kerning0
move_list
\f1 : List of all moves made.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
highlighted_square
\f1 : The square currently highlighted (i.e., the square that was clicked to display possible moves).\
\ls3\ilvl1
\f3 \kerning1\expnd0\expndtw0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
white_check_threats
\f1 : List of pieces threatening the white king.\
\ls3\ilvl1
\f3 \kerning1\expnd0\expndtw0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
black_check_threats
\f1 : List of pieces threatening the black king.\
\ls3\ilvl1
\f3 \kerning1\expnd0\expndtw0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
white_pieces
\f1 : A list containing references to all white pieces in the game.\
\ls3\ilvl1
\f3 \kerning1\expnd0\expndtw0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
black_pieces
\f1 : A list containing references to all black pieces in the game.\
\ls3\ilvl1
\f3 \kerning1\expnd0\expndtw0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
graveyard
\f1 : A list where captured pieces are stored.\
\pard\tx566\pardeftab720\partightenfactor0

\f0\b \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Methods
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
__init__(self, viewing_angle: str)
\f1 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Initializes the board with an 8x8 grid of 
\f3 Square
\f1  objects.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Sets up the initial position of all pieces on the board according to the 
\f3 viewing_angle
\f1 :\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\partightenfactor0
\ls4\ilvl2\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9642 
\f1 	}\expnd0\expndtw0\kerning0
If 
\f3 viewing_angle == "white"
\f1 , white pieces are placed at the bottom.\
\ls4\ilvl2\kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9642 
\f1 	}\expnd0\expndtw0\kerning0
If 
\f3 viewing_angle == "black"
\f1 , black pieces are placed at the bottom.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Sets initial values for 
\f3 last_move
\f1 , 
\f3 highlighted_square
\f1 , 
\f3 white_check_threats
\f1 , 
\f3 black_check_threats
\f1 , 
\f3 white_pieces
\f1 , 
\f3 black_pieces
\f1 , and 
\f3 graveyard
\f1 .\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
move_piece(self, piece, destination_square)
\f1 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Handles moving a piece to the destination square.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Captures any opponent's piece at the destination and updates the graveyard.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Updates the piece's current square and the last move information.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
capture_piece(self, piece)
\f1 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Removes the piece from its current square and updates the active piece lists.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Adds the captured piece to the graveyard.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
get_square(self, location: tuple[int, int]) -> Square
\f1 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Returns the 
\f3 Square
\f1  object at the given location on the board.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
is_in_check(self, color: str) -> bool
\f1 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Determines if the king of the given color is in check by checking the threats list.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	6	}\expnd0\expndtw0\kerning0
check(self, color: str)
\f1 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Identifies and updates the list of threats to the king of the specified color.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Updates 
\f3 white_check_threats
\f1  or 
\f3 black_check_threats
\f1  based on the color.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	7	}\expnd0\expndtw0\kerning0
uncheck(self, color: str)
\f1 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Clears the list of threats to the king of the specified color.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	8	}\expnd0\expndtw0\kerning0
is_checkmate(self, color: str) -> bool
\f1 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Determines if the king of the specified color is in checkmate.\
\ls4\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Checks if there are no valid moves that can escape check for the king.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	9	}\expnd0\expndtw0\kerning0
handle_castling(self, king, rook)
\f1 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Checks and executes castling if conditions are met (to be implemented).\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	10	}\expnd0\expndtw0\kerning0
handle_en_passant(self, pawn)
\f1 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Checks and executes en passant if conditions are met (to be implemented).\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	11	}\expnd0\expndtw0\kerning0
handle_pawn_promotion(self, pawn, promotion_choice)
\f1 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Promotes a pawn to the chosen piece type when it reaches the end of the board (to be implemented).\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 {\listtext	12	}\expnd0\expndtw0\kerning0
get_threats_to_square(self, square: Square, color: str) -> list
\f1 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
Returns a list of pieces that threaten the given square based on the color of the pieces.\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b \cf0 \strokec2 \
\
Move Class\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Role & Responsibilities
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls5\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Represents a move made during the game, tracking detailed move information.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Fields
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls5\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 piece
\f1 : The piece making the move.\
\ls5\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 from_square
\f1 : The square from which the piece is moving.\
\ls5\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 to_square
\f1 : The destination square of the move.\
\ls5\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 captured_piece
\f1 : The piece captured during the move, if any.\
\ls5\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 previous_move
\f1 : Reference to the previous move, if applicable.\
\ls5\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 next_move
\f1 : Reference to the next move, if applicable.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Methods
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls5\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 __str__()
\f1 : Returns a string representation of the move for debugging.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b \cf0 \strokec2 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls6\ilvl1
\f1\b0 \cf0 \strokec2 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b \cf0 \strokec2 Game Class\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Role & Responsibilities
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls7\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Manages the overall game state, including turns, game flow, and interaction with the board.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Fields
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls7\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 board
\f1 : An instance of the 
\f3 Board
\f1  class.\
\ls7\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 current_turn
\f1 : Tracks whose turn it is (e.g., "white" or "black").\
\ls7\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 game_over
\f1 : Boolean to check if the game is over.\
\ls7\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 viewing_angle
\f1 : Determines the perspective of the board ("white" or "black").\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Methods
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls7\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 start_game()
\f1 : Initializes the game, sets the initial viewing angle, and creates the 
\f3 Board
\f1  instance by passing the 
\f3 viewing_angle
\f1  to the board's constructor.\
\ls7\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 handle_turn()
\f1 : Manages each turn's logic, including user input and move validation.\
\ls7\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 process_click(location)
\f1 : Handles the player's click, selecting a square or moving the piece.\
\ls7\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 toggle_viewing_angle()
\f1 : Switches the viewing angle and re-renders the board.\
\ls7\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 draw_board(renderer)
\f1 : Uses a separate rendering class or module to draw the board and pieces.\
\ls7\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 run_game()
\f1 : Main loop that runs the game until it's over.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls8\ilvl1\cf0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls8\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Turn Management
\f1\b0 : Checks are assessed as check moves before the next turn starts, adding threats to the opposing team.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b \cf0 \strokec2 \
\
\
GraphicsManager Class\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls9\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Role & Responsibilities
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls9\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Responsible for rendering the board, pieces, and UI elements using Pygame.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls9\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Methods
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls9\ilvl1
\f3 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 draw_board(board)
\f1 : Renders the current state of the board.\
\ls9\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 draw_pieces(pieces)
\f1 : Renders the pieces on the board.\
\ls9\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 highlight_moves(moves)
\f1 : Highlights possible moves for a piece.\
\ls9\ilvl1
\f3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f4 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 display_message(message)
\f1 : Displays game messages (e.g., check, checkmate).\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b \cf0 \strokec2 \
\
\
Main Function\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls10\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Role & Responsibilities
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls10\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The entry point of the program, responsible for starting the game.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls10\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Responsibilities
\f1\b0 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls10\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create an instance of the 
\f3 Game
\f1  class.\
\ls10\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f1 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Call 
\f3 start_game()
\f1  to begin the game.\
}